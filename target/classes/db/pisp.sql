/**
 * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 * This software is the property of WSO2 Inc. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein is strictly forbidden, unless permitted by WSO2 in accordance with
 * the WSO2 Commercial License available at http://wso2.com/licenses. For specific
 * language governing the permissions and limitations under this license,
 * please see the license as well as any agreement youâ€™ve entered into with
 * WSO2 governing the purchase of this software and any associated services.
 */
CREATE DATABASE IF NOT EXISTS openbank_pisp_mgtdb;
USE openbank_pisp_mgtdb;

CREATE TABLE IF NOT EXISTS E_SHOPS (
  E_SHOP_USERNAME              VARCHAR(255)   NOT NULL,
  REGISTERED_NO           VARCHAR(255)   NOT NULL,
  REGISTERED_BUSSINESS_NAME       VARCHAR(255) NOT NULL,
  REGISTERED_AUTHORITY               VARCHAR(255) DEFAULT NULL,
  REGISTERED_COUNTRY            VARCHAR(255) DEFAULT NULL,
  ECOMMERCE_MARKETPALCE_CATEGORY        ENUM ('SingleVendor', 'MultiVendor'),
  CONNECTED_DATE          TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
  PASSWORDHASH       VARBINARY(255) NOT NULL,
  SALT               VARBINARY(255) NOT NULL,
  CLIENT_ID          VARCHAR(255)   NOT NULL,
  CLIENT_SECREAT     VARCHAR(255)   NOT NULL,
  EMAIL             VARCHAR(255) DEFAULT NULL,
  CONSTRAINT pk_e_shop PRIMARY KEY (E_SHOP_USERNAME ),
  CONSTRAINT uk_e_shop UNIQUE (CLIENT_ID)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS MERCHANTS (
  MERCHANT_ID               VARCHAR(255)   NOT NULL,
  E_SHOP_USERNAME           VARCHAR(255)   NOT NULL,
  MERCHANT_END_TO_END_IDENTIFICATION   VARCHAR(255) NOT NULL,
  MERCHANT_NAME             VARCHAR(255)   NOT NULL,
  MERCHANT_CATEGORY_CODE    VARCHAR(20) NOT NULL,
  CONSTRAINT Fk_merchant_eshop_username FOREIGN KEY (E_SHOP_USERNAME) REFERENCES E_SHOPS (E_SHOP_USERNAME) ON DELETE CASCADE,
  CONSTRAINT pk_merchant PRIMARY KEY (E_SHOP_USERNAME,MERCHANT_END_TO_END_IDENTIFICATION),
  CONSTRAINT uk_merchant UNIQUE (MERCHANT_ID)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS CREDITOR_ACCOUNTS (
  CREDITOR_ACCOUNT_UID            VARCHAR(255)   NOT NULL,
  MERCHANT_ID                     VARCHAR(255)   NOT NULL,
  BANK_IDENTIFICATION_SCHEME      ENUM('BICFI'),
  BANK_IDENTIFICATION_NO          VARCHAR(255) NOT NULL,
  BANK_NAME                       VARCHAR(255) NOT NULL,
  ACCOUNT_IDENTIFICATION_SCHEME   ENUM('IBAN'),
  ACCOUNT_IDENTIFICATION_NO       VARCHAR(255) NOT NULL,
  ACCOUNT_OWNER_NAME              VARCHAR(255) NOT NULL,
  CONSTRAINT Fk_creditorAccount_merchant_id FOREIGN KEY (MERCHANT_ID) REFERENCES MERCHANTS (MERCHANT_ID) ON DELETE CASCADE,
  CONSTRAINT pk_creditor_account PRIMARY KEY (CREDITOR_ACCOUNT_UID ),
  CONSTRAINT uk_creditor_account UNIQUE (BANK_IDENTIFICATION_SCHEME ,BANK_IDENTIFICATION_NO , ACCOUNT_IDENTIFICATION_SCHEME ,ACCOUNT_IDENTIFICATION_NO)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS PAYMENTS (
  PAYMENT_INIT_REQ_ID    VARCHAR(255)   NOT NULL,
  MERCHANT_ID          VARCHAR(255)   NOT NULL,
  PURCHASE_ID          VARCHAR(255) NOT NULL,
  CURRENCY             VARCHAR(255)   NOT NULL,
  PAYMENT_AMOUNT       DECIMAL(13, 2)  NOT NULL,
  DATE_TIME          TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
  CUSTOMER_ID          VARCHAR(255)  NOT NULL,
  REDIRECT_URI         VARCHAR(2047),
  ACCESS_TOKEN_ESHOP   VARCHAR (255) NOT NULL,
  PAYMENT_STATUS       ENUM ('Received', 'AcceptedByCustomer','Completed'),
  PAYMENT_ID           VARCHAR(255),
  PAYMENT_SUB_ID       VARCHAR (255),
  CONSTRAINT Fk_payments_merchant_id FOREIGN KEY (MERCHANT_ID) REFERENCES MERCHANTS (MERCHANT_ID) ON DELETE CASCADE,
  CONSTRAINT pk_payment PRIMARY KEY (PAYMENT_INIT_REQ_ID)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS CUSTOMERS (
  CUSTOMER_ID                     VARCHAR(255)   NOT NULL,
  E_SHOP_USERNAME           VARCHAR(255)   NOT NULL,
  CUSTOMER_IDENTIFICATION         VARCHAR(255) NOT NULL,
  CUSTOMER_NAME                   VARCHAR(255)   NOT NULL,
  CONSTRAINT fk_customers_customer_id FOREIGN KEY (CUSTOMER_ID) REFERENCES MERCHANTS (MERCHANT_ID) ON DELETE CASCADE,
  CONSTRAINT pk_payment PRIMARY KEY (E_SHOP_USERNAME, CUSTOMER_IDENTIFICATION),
  CONSTRAINT uk_merchant UNIQUE (CUSTOMER_ID)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS DEBTOR_ACCOUNTS (
  CREDITOR_ACCOUNT_UID       VARCHAR(255)   NOT NULL,
  BANK_UID                   VARCHAR(255)   NOT NULL,
  ACCOUNT_IDENTIFICATION_SCHEME  ENUM('IBAN'),
  ACCOUNT_IDENTIFICATION_NO  VARCHAR(255) NOT NULL,
  ACCOUNT_OWNER_NAME              VARCHAR(255) NOT NULL,
  CUSTOMER_ID                     VARCHAR(255)   NOT NULL,
  CONSTRAINT fk_debtor_accounts_customer_id FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (CUSTOMER_ID) ON DELETE CASCADE,
  CONSTRAINT fk_debtor_accounts_bank_uid FOREIGN KEY (BANK_UID) REFERENCES BANKS (BANK_UID) ON DELETE CASCADE,
  CONSTRAINT pk_debtor_account PRIMARY KEY (CREDITOR_ACCOUNT_UID),
  CONSTRAINT uk_debtor_account UNIQUE (BANK_UID,ACCOUNT_IDENTIFICATION_SCHEME , ACCOUNT_IDENTIFICATION_NO)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS ADMIN(
  USERNAME           VARCHAR(255)   NOT NULL,
  PASSWORDHASH       VARBINARY(255) NOT NULL,
  SALT               VARBINARY(255) NOT NULL,
  EMAIL              VARCHAR(255) DEFAULT NULL,
  TIMESTAMP          TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT pk_admin PRIMARY KEY (USERNAME)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS BANKS (
  BANK_UID                   VARCHAR(255)   NOT NULL,
  BANK_IDENTIFICATION_SCHEME  ENUM('BICFI'),
  BANK_IDENTIFICATION_NO  VARCHAR(255) NOT NULL,
  BANK_NAME  VARCHAR(255) NOT NULL,
  SPEC_FOR_OB   ENUM('UK','BERLIN','STET'),
  CLIENT_ID   VARCHAR(255) NOT NULL,
  CLIENT_SECREAT VARCHAR(255) NOT NULL,
  TOKENAPIURL   VARCHAR(255),
  AUTHORIZEAPIURL   VARCHAR(255),
  PAYMENTAPIURL   VARCHAR(255),
  CONSTRAINT pk_banks PRIMARY KEY (BANK_UID)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS E_SHOP_ACCESS_TOKENS (
  UID                   INT   NOT NULL AUTO_INCREMENT,
  E_SHOP_CLIENT_ID      VARCHAR(255) NOT NULL,
  PRIMARY_TOKEN         VARCHAR(255) NOT NULL,
  REFRESH_TOKEN         VARCHAR(255),
  TIMESTAMP             TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
  VALID_TILL             DATETIME     NOT NULL,
  CONSTRAINT pk_access_tokens PRIMARY KEY (UID),
  CONSTRAINT fk_e_shop FOREIGN KEY (E_SHOP_CLIENT_ID) REFERENCES E_SHOPS(CLIENT_ID)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS APPLICATION_TOKENS (
  UID        INT          NOT NULL AUTO_INCREMENT,
  BANK_UID   VARCHAR(255) NOT NULL,
  TOKEN      VARCHAR(255) NOT NULL,
  TIMESTAMP  TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
  VALID_TILL DATETIME     NOT NULL,
  CONSTRAINT pk_application_tokens PRIMARY KEY (UID),
  CONSTRAINT fk_banks_bank_uid FOREIGN KEY (BANK_UID) REFERENCES BANKS (BANK_UID)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS SESSION_TOKENS (
  E_SHOP_USERNAME    VARCHAR(255)  NOT NULL,
  SESSION_KEY VARCHAR(2047) NOT NULL,
  EXPIRY_TIME DATETIME      NOT NULL,
  TIMESTAMP   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT pk_session_token_e_shop_user PRIMARY KEY (E_SHOP_USERNAME),
  CONSTRAINT fk_e_shop_user FOREIGN KEY (E_SHOP_USERNAME) REFERENCES E_SHOPS(E_SHOP_USERNAME)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;






















CREATE TABLE IF NOT EXISTS INITIATION_IDS (
  UID              INT          NOT NULL AUTO_INCREMENT,
  USERNAME         VARCHAR(255) NOT NULL,
  BANK_UID         VARCHAR(255) NOT NULL,
  INITIATION_ID    VARCHAR(255) NOT NULL,
  TIMESTAMP        TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
  ACCESS_TOKEN_UID INT,
  CONSTRAINT pk_initiation_ids PRIMARY KEY (UID),
  CONSTRAINT fk_aggregator_user_username FOREIGN KEY (USERNAME) REFERENCES AGGREGATOR_USER (USERNAME)
    ON DELETE CASCADE,
  CONSTRAINT fk_banks_bank_uid FOREIGN KEY (BANK_UID) REFERENCES BANKS (BANK_UID)
    ON DELETE CASCADE,
  CONSTRAINT fk_access_tokens_uid FOREIGN KEY (ACCESS_TOKEN_UID) REFERENCES ACCESS_TOKENS (UID)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS TOKENS_AUDIT (
  UID       INT          NOT NULL AUTO_INCREMENT,
  USERNAME  VARCHAR(255),
  BANK_UID  VARCHAR(255) NOT NULL,
  TOKEN     VARCHAR(255) NOT NULL,
  TIMESTAMP TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
  TYPE      VARCHAR(255) NOT NULL,
  CONSTRAINT pk_token_audits PRIMARY KEY (UID),
  CONSTRAINT fk_banks_bank_uid FOREIGN KEY (BANK_UID) REFERENCES BANKS (BANK_UID)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS APPLICATION_TOKENS (
  UID        INT          NOT NULL AUTO_INCREMENT,
  BANK_UID   VARCHAR(255) NOT NULL,
  TOKEN      VARCHAR(255) NOT NULL,
  TIMESTAMP  TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
  VALID_TILL DATETIME     NOT NULL,
  CONSTRAINT pk_application_tokens PRIMARY KEY (UID),
  CONSTRAINT fk_banks_bank_uid FOREIGN KEY (BANK_UID) REFERENCES BANKS (BANK_UID)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS USER_BANKS (
  USERNAME          VARCHAR(255)                                                                                NOT NULL,
  BANK_UID          VARCHAR(255)                                                                                NOT NULL,
  STATUS            ENUM ('Linking Initiated', 'Linked', 'Re-Linking Initiated', 'Expired', 'Revoked', 'Erred') NOT NULL,
  LINKING_INITIATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT pk_user_banks PRIMARY KEY (USERNAME, BANK_UID),
  CONSTRAINT fk_aggregator_user_username FOREIGN KEY (USERNAME) REFERENCES AGGREGATOR_USER (USERNAME)
    ON DELETE CASCADE,
  CONSTRAINT fk_banks_bank_uid FOREIGN KEY (BANK_UID) REFERENCES BANKS (BANK_UID)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS SESSION_TOKENS (
  USERNAME    VARCHAR(255)  NOT NULL,
  SESSION_KEY VARCHAR(2047) NOT NULL,
  EXPIRY_TIME DATETIME      NOT NULL,
  TIMESTAMP   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT pk_aggregator_user PRIMARY KEY (USERNAME)
)
  ENGINE = InnoDB;